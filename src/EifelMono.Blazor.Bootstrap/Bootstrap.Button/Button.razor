@namespace EifelMono.Blazor.Bootstrap
@inherits Base.ButtonBase

<button class="@ClassToRender" style="@StyleToRender" @attributes="@AttributesToRender.Value" @onclick="@ButtonOnClick">
    @ChildContent
</button>

@code {
    [Parameter]
    public EventCallback OnClick { get; set; }

    void ButtonOnClick()
        => OnClick.InvokeAsync(null);

    protected override void OnInitialized()
    {
        base.OnInitialized();
        string c = ClassToRender;

        string s = StyleToRender;
        Dictionary<string, object> a = AttributesToRender;
    }

    protected Dictionary<string, object> Karl => AttributesToRender.Value;
    protected Dictionary<string, object> Hugo => AttributesToRender;

    protected override void OnParametersSet()
    {
        ClassToRender.Empty("btn")
                     .Add(Class)
                     .Add(Color.ClassToRender(IsOutLine))
                     .Add(Size.ClassToRender())
                     .Add("btn-block", when: IsBlock)
                     .Add("active", when: IsActive);
        StyleToRender.Empty();
        AttributesToRender.Empty();
        if (IsDisabled)
            AttributesToRender.Add("disabled", "");
    }
}
